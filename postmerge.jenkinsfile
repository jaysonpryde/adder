pipeline {
    agent none
    options {
        buildDiscarder(logRotator(numToKeepStr: '1000'))
    }
    stages {
        stage('Package, Test, & Deliver') {
            agent {
                dockerfile {
                    label 'aws-aws-agent'
                    filename 'cd-env.dockerfile'
                }
            }
            steps {
                sh """
                    ./package.sh 0.1.0
                    ./integration-test.sh 3 8 11 0.1.0
                """
            }
        }
        stage('Push git tag') {
            agent { label 'docker' }
            steps {
                script {
                    try {
                        container = docker.build("git", "-f git.dockerfile .")
                        container.inside {
                            withCredentials([sshUserPrivateKey(
                                credentialsId: 'github-jaysonpryde-priv', keyFileVariable: 'KEYFILE')]) {
                                withEnv(['GIT_SSH_COMMAND=ssh -o StrictHostKeyChecking=no -i ${KEYFILE}']) {
                                    sh "git tag 0.1.0"
                                    sh "git push origin 0.1.0"
                                }
                            }
                        }
                    } catch (Exception e) {
                        sh "git tag -d ${version_g} || true"
                        throw e
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                currentBuild.description = version_g
            }
            cleanWs()
        }
    }
}

